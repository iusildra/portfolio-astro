---
import { Icon } from "astro-icon/components";
import InlineCode from "../components/InlineCode.astro";
import Line from "../components/Line.astro";
import SkillCard from "../components/SkillCard.astro";
import SkillLogo from "../components/SkillLogo.astro";
import Layout from "../layouts/Layout.astro";
import Link from "../components/elements/Link.astro";
---

<script>
  import { sequencedTransitions } from "../utils/Transitions";

  sequencedTransitions(
    document.querySelectorAll("#page-header > *")!,
    "appear",
  );
</script>

<Layout title="My skills">
  <section slot="hero" id="page-header">
    <h1 id="page-title">My skills</h1>
    <div class="inner-links" id="skill-links">
      <Link link="#skills" kind={"outline"}>Main Skills</Link>
      <Link link="#other-skills" kind={"outline"}>Other Skills</Link>
    </div>
  </section>

  <main>
    <section id="skills">
      <h1>Main Skills</h1>

      <Line />

      <h2>Paradigms</h2>
      <SkillCard name="Functional Programming">
        <Icon slot="skill-logo" name="mdi:lambda" width="4rem" height="4rem" />
        <p>
          I discovered the functional paradigm not so long ago (in 2022) with <a
            href="https://scala-lang.org/"
            target="_blank">Scala</a
          > and loved the mindset and the safety it provides through idempotency,
          re-producibility and statelessness. Now most of my code has a functional
          approach except some rare cases where it hurts me to admit it but the imperative
          way better fits the needs
        </p>
      </SkillCard>
      <SkillCard name="Object Oriented Programming" reverse={true}>
        <Icon slot="skill-logo" name="mdi:rabbit" width="4rem" height="4rem" />
        <p>
          What got me into programming, I started to toy with some turtles (<a
            href="https://www.kogics.net/kojo"
            target="_blank">Kojo</a
          >) to draw weird things (I'm not good as an artist, sorry if the
          colors burn your eyes ^^'). After that I started a MOOC on Coursera on
          Java & OOP at ~14y.o. Did you get the rabbit ? :)
        </p>
      </SkillCard>

      <Line />

      <h2>Languages</h2>
      <SkillCard name="Scala">
        <Icon slot="skill-logo" name="logos:scala" />
        <p>
          The language I'm the most confortable with (and IMO one of the best of
          all time, but I might be biased...), with which I discovered both FP &
          open-source worlds. I particularly enjoy its clean syntax and
          conciseness & expressivity and the way it makes reasonning easier for
          non-simple logics. And latest development of the language made it even
          more simplier to use as a standalone script
        </p>
      </SkillCard>
      <SkillCard name="Typescript" reverse={true}>
        <Icon slot="skill-logo" name="logos:typescript-icon" />
        <p>
          Nice language with which I recently re-discovered what it is do to
          frontend development. Used to having only CRUDs and forms (which was
          very fun the first time I did it, but after doing it 5 times, well, I
          didn't want to do fronted anymore)
        </p>
      </SkillCard>
      <SkillCard name="Java">
        <Icon slot="skill-logo" name="logos:java" />
        <p>My very-first language ü•∞. Way too verbose but we still like him</p>
      </SkillCard>
      <SkillCard name="Rust" reverse={true}>
        <Icon
          slot="skill-logo"
          name="logos:rust"
          style="background-color: var(--text-color); border-radius: 50%;"
        />
        <p>
          Very interesting langage. I tried it once for a small project (ok I
          admit, I put it here for beauty) and tried to fight with the
          borrow-checker. Morality: you <b>do not</b> fight with the borrow-checker.
          It'll always win. Always (and that's good, though frustrating at first)
        </p>
      </SkillCard>

      <Line />

      <h2>Databases</h2>
      <SkillCard name="PostgreSQL">
        <Icon slot="skill-logo" name="logos:postgresql" />
        <p>üêò</p>
      </SkillCard>
      <SkillCard name="MySQL" reverse={true}>
        <Icon slot="skill-logo" name="logos:mysql" />
        <p>üê¨</p>
      </SkillCard>

      <Line />

      <h2>Dev Tools</h2>
      <SkillCard name="Git">
        <Icon slot="skill-logo" name="logos:git-icon" />
        <p>
          As said before I love using CLIs. Using the CLI for every single step
          in Git (ok, not for adding a single file to the stage tree) allowed me
          to master the common flows ü™Ñ (though I sometimes learnt the hard way
          that if there's a doc, it not for prettiness)
        </p>
      </SkillCard>
      <SkillCard name="GitHub" reverse={true}>
        <Icon
          slot="skill-logo"
          name="logos:github-icon"
          style="background-color: var(--text-color); border: 2px solid var(--text-color); border-radius: 50%;"
        />
        <p>
          Since the beginning I only used GitHub (no GitLab, yet it's just a
          different tool). Btw, your thoughts on GitHub CLI ? Personnaly I don't
          open PRs with the UI anymore üòÑ
        </p>
      </SkillCard>
      <SkillCard name="GitHub Actions">
        <Icon
          slot="skill-logo"
          name="logos:github-icon"
          style="background-color: var(--text-color); border: 2px solid var(--text-color); border-radius: 50%;"
        />
        <p>
          Did some workflows for auto-publishing a webiste or for a full CI
          pipeline. And as every CI/CD environment the local reproducibility is
          not always great and the conditional could be reworked a bit (e.g. to
          include cleaner ternary). Still it's pretty nice to use.
        </p>
      </SkillCard>
      <SkillCard name="Docker" reverse={true}>
        <Icon slot="skill-logo" name="logos:docker-icon" />
        <p>
          One day I ended up using 450Gb (out of 500Gb) of disk space with only
          Docker images. That's were I learnt about the necesity of regularly
          cleaning the cache and having multi-stage <InlineCode
            >Dockerfile</InlineCode
          > (it took ~15min to clear the cache üíÄ)
        </p>
      </SkillCard>
    </section>

    <Line width="80%" />

    <section id="other-skills">
      <h1>Others skills</h1>
      <p>
        The following skills are present because I have at least some
        <u>basic</u>
        knowledge & used them in a project
      </p>

      <!-- <h3>Languages</h3> -->
      <div class="other-skills">
        <SkillLogo name="Terraform">
          <Icon slot="skill-logo" name="logos:terraform-icon" />
        </SkillLogo>
        <SkillLogo name="JavaScript">
          <Icon slot="skill-logo" name="logos:javascript" />
        </SkillLogo>
      </div>

      <!-- <h3>Frontend Frameworks</h3> -->
      <div class="other-skills">
        <SkillLogo name="React">
          <Icon slot="skill-logo" name="logos:react" />
        </SkillLogo>
        <SkillLogo name="Vue">
          <Icon slot="skill-logo" name="logos:vue" />
        </SkillLogo>
        <SkillLogo name="Svelte">
          <Icon slot="skill-logo" name="logos:svelte-icon" />
        </SkillLogo>
      </div>

      <!-- <h3>HTTP Protocols</h3> -->
      <div class="other-skills">
        <SkillLogo name="gRPC">
          <Icon slot="skill-logo" name="logos:grpc" />
        </SkillLogo>
        <SkillLogo name="REST">
          <Icon slot="skill-logo" name="logos:json-schema-icon" />
        </SkillLogo>
        <SkillLogo name="GraphQL">
          <Icon slot="skill-logo" name="logos:graphql" />
        </SkillLogo>
      </div>

      <!-- <h3>Cloud</h3> -->
      <div class="other-skills">
        <SkillLogo name="Kibana">
          <Icon slot="skill-logo" name="logos:kibana" />
        </SkillLogo>
        <SkillLogo name="AWS S3">
          <Icon slot="skill-logo" name="logos:aws-s3" />
        </SkillLogo>
        <SkillLogo name="AWS EC2">
          <Icon slot="skill-logo" name="logos:aws-ec2" />
        </SkillLogo>
        <SkillLogo name="Grafana">
          <Icon slot="skill-logo" name="logos:grafana" />
        </SkillLogo>
      </div>

      <!-- <h3>Not relevant, but pretty üôÇ</h3> -->
      <div class="other-skills">
        <SkillLogo name="Linux">
          <Icon slot="skill-logo" name="logos:linux-tux" />
        </SkillLogo>
        <SkillLogo name="Archlinux">
          <Icon slot="skill-logo" name="logos:archlinux" />
        </SkillLogo>
        <SkillLogo name="VSCode">
          <Icon slot="skill-logo" name="logos:visual-studio-code" />
        </SkillLogo>
      </div>
    </section>
  </main>
</Layout>

<style>
  #page-header > * {
    opacity: 0;
    transform: translateY(100%);
    transition:
      opacity 1s ease,
      transform 1s ease;

    &.appear {
      opacity: 1;
      transform: translateY(0);
    }
  }

  #page-header .inner-links {
    display: flex;
    gap: 2rem;
  }

  h1,
  h2 {
    text-align: center;
  }

  .other-skills {
    margin: 4rem 0 4rem 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    gap: 1rem;
  }

  #skills p {
    margin: 0.25em;
    max-height: 8em;
    overflow-y: scroll;
    scrollbar-color: var(--accent) var(--background);
  }

  #skills svg,
  #other-skills svg {
    width: 4rem;
    height: 4rem;
  }
</style>
