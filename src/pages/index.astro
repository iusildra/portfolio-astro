---
import Layout from "../layouts/Layout.astro";
import PP from "../images/me.webp";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import Line from "../components/Line.astro";
import Cowsay from "../components/pre/Cowsay.astro";
import SkillCard from "../components/SkillCard.astro";
import InlineCode from "../components/InlineCode.astro";
import SkillLogo from "../components/SkillLogo.astro";

const socials = [
  { icon: "mdi:github", href: "https://github.com/iusildra" },
  { icon: "mdi:linkedin", href: "https://www.linkedin.com/in/lucas-nouguier" },
  { icon: "mdi:twitter", href: "https://twitter.com/LucasNouguier" },
  { icon: "mdi:alternate-email", href: "mailto:portfolio.owy6d@passmail.net" },
];
---

<Layout title="Lucas Nouguier's Portfolio">
  <section slot="hero">
    <div class="me">
      <div class="photo">
        <Image src={PP} alt="Profile picture" />
        <div class="links">
          {
            socials.map(({ icon, href }) => (
              <a href={href} target="_blank">
                <Icon name={icon} />
              </a>
            ))
          }
        </div>
      </div>
      <div class="info">
        <h1>Lucas Nouguier</h1>
        <h2>Fullstack & Scala Software Engineer</h2>
        <div class="inner-links">
          <a href="#about-me" class="outline">About me</a>
          <a href="#skills" class="outline">Main Skills</a>
          <a href="#other-skills" class="outline">Other Skills</a>
        </div>
        <!-- <h4><Icon name="mdi:home"/> Montpellier, France</h4>
        <h4><Icon name="mdi:language"/>French (Native), English (Advanced)</h4> -->
      </div>
    </div>
  </section>

  <main>
    <Line width_percent="80%" />

    <section id="about-me">
      <div class="bio">
        <p>
          Enthusiastic baby backend software engineer, who lost its way in the
          frontend world (hence this website)
        </p>
        <p>
          Scala and functional programming are my current passions even though I
          recently discovered with Scala.IO's website that CSS can be fun (but
          let's not abuse it üôÇ)
        </p>
        <p>
          Ex-ArchLinux user (I got corrupted [again] by MacOS), I enjoy using
          the command line for a better understanding of the tools I'm using and
          spending hours tweaking my system according to my needs
        </p>
      </div>

      <Line />

      <Cowsay />
    </section>

    <Line width_percent="80%" />

    <section id="skills">
      <h1>Skills</h1>

      <h2 class="top-bar">Paradigms</h2>
      <SkillCard name="Functional Programming">
        <Icon slot="skill-logo" name="mdi:lambda" width="4rem" height="4rem" />
        <p>
          I discovered the functional paradigm not so long ago (in 2022) with <a
            href="https://scala-lang.org/"
            target="_blank">Scala</a
          > and loved the mindset and the safety it provides through idempotency,
          re-producibility and statelessness. Now most of my code has a functional
          approach except some rare cases where it hurts me to admit it but the imperative
          way better fits the needs
        </p>
      </SkillCard>
      <SkillCard name="Object Oriented Programming" reverse={true}>
        <Icon slot="skill-logo" name="mdi:rabbit" width="4rem" height="4rem" />
        <p>
          What got me into programming, I started to toy with some turtles (<a
            href="https://www.kogics.net/kojo"
            target="_blank">Kojo</a
          >) to draw weird things (I'm not good as an artist, sorry if the
          colors burn your eyes ^^'). After that I started a MOOC on Coursera on
          Java & OOP at ~14y.o. Did you get the rabbit ? :)
        </p>
      </SkillCard>

      <h2 class="top-bar">Languages</h2>
      <SkillCard name="Scala">
        <Icon slot="skill-logo" name="logos:scala" />
        <p>
          The language I'm the most confortable with (and IMO one of the best of
          all time, but I might be biased...), with which I discovered both FP &
          open-source worlds. I particularly enjoy its clean syntax and
          conciseness & expressivity and the way it makes reasonning easier for
          non-simple logics. And latest development of the language made it even
          more simplier to use as a standalone script
        </p>
      </SkillCard>
      <SkillCard name="Typescript" reverse={true}>
        <Icon slot="skill-logo" name="logos:typescript-icon" />
        <p>
          Nice language with which I recently re-discovered what it is do to
          frontend development. Used to having only CRUDs and forms (which was
          very fun the first time I did it, but after doing it 5 times, well, I
          didn't want to do fronted anymore)
        </p>
      </SkillCard>
      <SkillCard name="Java">
        <Icon slot="skill-logo" name="logos:java" />
        <p>My very-first language ü•∞. Way too verbose but we still like him</p>
      </SkillCard>
      <SkillCard name="Rust" reverse={true}>
        <Icon
          slot="skill-logo"
          name="logos:rust"
          style="background-color: var(--text-color); border-radius: 50%;"
        />
        <p>
          Very interesting langage. I tried it once for a small project (ok I
          admit, I put it here for beauty) and tried to fight with the
          borrow-checker. Morality: you <b>do not</b> fight with the borrow-checker.
          It'll always win. Always (and that's good, though frustrating at first)
        </p>
      </SkillCard>

      <h2 class="top-bar">Databases</h2>
      <SkillCard name="PostgreSQL">
        <Icon slot="skill-logo" name="logos:postgresql" />
        <p>üêò</p>
      </SkillCard>
      <SkillCard name="MySQL" reverse={true}>
        <Icon slot="skill-logo" name="logos:mysql" />
        <p>üê¨</p>
      </SkillCard>

      <h2 class="top-bar">Dev Tools</h2>
      <SkillCard name="Git">
        <Icon slot="skill-logo" name="logos:git-icon" />
        <p>
          As said before I love using CLIs. Using the CLI for every single step
          in Git (ok, not for adding a single file to the stage tree) allowed me
          to master the common flows ü™Ñ (though I sometimes learnt the hard way
          that if there's a doc, it not for prettiness)
        </p>
      </SkillCard>
      <SkillCard name="GitHub" reverse={true}>
        <Icon
          slot="skill-logo"
          name="logos:github-icon"
          style="background-color: var(--text-color); border: 2px solid var(--text-color); border-radius: 50%;"
        />
        <p>
          Since the beginning I only used GitHub (no GitLab, yet it's just a
          different tool)
        </p>
      </SkillCard>
      <SkillCard name="GitHub Actions">
        <Icon
          slot="skill-logo"
          name="logos:github-icon"
          style="background-color: var(--text-color); border: 2px solid var(--text-color); border-radius: 50%;"
        />
        <p>
          Did some workflows for auto-publishing a webiste or for a full CI
          pipeline. And as every CI/CD environment the local reproducibility is
          not always great and the conditional could be reworked a bit (e.g. to
          include cleaner ternary). Still it's pretty nice to use.
        </p>
      </SkillCard>
      <SkillCard name="Docker" reverse={true}>
        <Icon slot="skill-logo" name="logos:docker-icon" />
        <p>
          One day I ended up using 450Gb (out of 500Gb) of disk space with only
          Docker images. That's were I learnt about the necesity of regularly
          cleaning the cache and having multi-stage <InlineCode
            >Dockerfile</InlineCode
          >
        </p>
      </SkillCard>
    </section>

    <Line width_percent="80%"/>

    <section id="other-skills">
      <h1>Others skills</h1>
      <p>
        The following skills are present because I have at least basic knowledge
      </p>

      <h3>Languages</h3>
      <div class="other-skills">
        <SkillLogo name="Terraform">
          <Icon slot="skill-logo" name="logos:terraform-icon" />
        </SkillLogo>
        <SkillLogo name="JavaScript">
          <Icon slot="skill-logo" name="logos:javascript" />
        </SkillLogo>
      </div>

      <h3>HTTP Protocols</h3>
      <div class="other-skills">
        <SkillLogo name="gRPC">
          <Icon slot="skill-logo" name="logos:grpc" />
        </SkillLogo>
        <SkillLogo name="GraphQL">
          <Icon slot="skill-logo" name="logos:graphql" />
        </SkillLogo>
        <SkillLogo name="REST">
          <Icon slot="skill-logo" name="logos:json-schema-icon" />
        </SkillLogo>
      </div>

      <h3>Frontend Frameworks</h3>
      <div class="other-skills">
        <SkillLogo name="React">
          <Icon slot="skill-logo" name="logos:react" />
        </SkillLogo>
        <SkillLogo name="Vue">
          <Icon slot="skill-logo" name="logos:vue" />
        </SkillLogo>
        <SkillLogo name="Svelte">
          <Icon slot="skill-logo" name="logos:svelte-icon" />
        </SkillLogo>
      </div>

      <h3>Cloud</h3>
      <div class="other-skills">
        <SkillLogo name="AWS">
          <Icon slot="skill-logo" name="logos:aws" />
        </SkillLogo>
        <SkillLogo name="AWS S3">
          <Icon slot="skill-logo" name="logos:aws-s3" />
        </SkillLogo>
        <SkillLogo name="Grafana & Loki">
          <Icon slot="skill-logo" name="logos:grafana" />
        </SkillLogo>
        <SkillLogo name="Kibana">
          <Icon slot="skill-logo" name="logos:kibana" />
        </SkillLogo>
      </div>

      <h3>Not relevant, but pretty üôÇ</h3>
      <div class="other-skills">
        <SkillLogo name="Linux">
          <Icon slot="skill-logo" name="logos:linux-tux" />
        </SkillLogo>
        <SkillLogo name="Archlinux">
          <Icon slot="skill-logo" name="logos:archlinux" />
        </SkillLogo>
        <SkillLogo name="VSCode">
          <Icon slot="skill-logo" name="logos:visual-studio-code" />
        </SkillLogo>
      </div>
    </section>
  </main>
</Layout>

<style>
  :root {
    --padding: 1rem;
  }

  .inner-links {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    justify-content: space-evenly;
  }
  .outline {
    font-size: 2rem;
    border: 2px solid var(--accent);
    border-radius: 0.5rem;
    padding: 0.5rem;
    transition: all 0.5s ease;
  }

  .other-skills {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    gap: 1rem;
  }
  .top-bar {
    position: relative;
  }

  .top-bar::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 60%;
    height: 0.25rem;
    background-color: var(--text-color);
  }

  .funny-quote {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  pre {
    white-space: break-spaces;
  }
  .bio {
    background-color: #2d2d2d;
    padding: 1rem;
    border-radius: 0.5rem;
    font-family: "Courier New", Courier, monospace;
    color: #f8f8f2;
    overflow-x: auto;
  }

  .me {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;

    .photo {
      flex: 1 1 25%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 2rem;
    }

    .info {
      flex: 1 1 70%;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .links {
      display: flex;
      gap: 1rem;
      justify-content: space-evenly;
    }

    .links svg {
      width: 3rem;
      height: 3rem;
    }

    .photo > img {
      width: 400px;
      height: auto;
      border-radius: 50%;

      max-width: 100%;
    }
  }

  #skills p {
    margin: 0.25em;
    max-height: 200px;
    overflow-y: scroll;
    scrollbar-color: var(--accent) var(--background);
  }

  #skills svg,
  #other-skills svg {
    width: 4rem;
    height: 4rem;
  }

  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  h2 {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 0.75em;
  }
  h3 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5em;
  }
</style>
